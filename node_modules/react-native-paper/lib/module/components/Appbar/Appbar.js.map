{"version":3,"sources":["Appbar.tsx"],"names":["React","View","Platform","StyleSheet","color","AppbarContent","AppbarAction","AppbarBackAction","Surface","withTheme","getAppbarColor","renderAppbarContent","DEFAULT_APPBAR_HEIGHT","modeAppbarHeight","AppbarHeader","Appbar","children","dark","style","theme","mode","elevated","rest","isV3","backgroundColor","customBackground","elevation","restStyle","flatten","isDark","isLight","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","isMode","modeToCompare","filterAppbarActions","useCallback","isLeading","toArray","filter","props","spacingStyle","styles","v3Spacing","spacing","appbar","height","columnContainer","centerAlignedContainer","controlsRow","renderOnly","rightActionControls","renderExcept","create","flexDirection","alignItems","paddingHorizontal","width","flex","justifyContent","paddingTop","AppbarWithTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, Platform, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\n\nimport AppbarContent from './AppbarContent';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport type { MD3Elevation, Theme } from '../../types';\nimport {\n  getAppbarColor,\n  renderAppbarContent,\n  DEFAULT_APPBAR_HEIGHT,\n  modeAppbarHeight,\n  AppbarModes,\n} from './utils';\nimport AppbarHeader from './AppbarHeader';\n\ntype Props = Partial<React.ComponentPropsWithRef<typeof View>> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the Appbar.\n   * - `small` - Appbar with default height (64).\n   * - `medium` - Appbar with medium height (112).\n   * - `large` - Appbar with large height (152).\n   * - `center-aligned` - Appbar with default height and center-aligned title.\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether Appbar background should have the elevation along with primary color pigment.\n   */\n  elevated?: boolean;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *  <Appbar style={styles.bottom}>\n *    <Appbar.Action\n *      icon=\"archive\"\n *      onPress={() => console.log('Pressed archive')}\n *     />\n *     <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n *     <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n *     <Appbar.Action\n *       icon=\"delete\"\n *       onPress={() => console.log('Pressed delete')}\n *     />\n *   </Appbar>\n *  );\n *\n * export default MyComponent\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n * });\n * ```\n */\nconst Appbar = ({\n  children,\n  dark,\n  style,\n  theme,\n  mode = 'small',\n  elevated,\n  ...rest\n}: Props) => {\n  const { isV3 } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = isV3 ? (elevated ? 2 : 0) : 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = getAppbarColor(\n    theme,\n    elevation,\n    customBackground,\n    elevated\n  );\n\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : typeof backgroundColor === 'string'\n        ? !color(backgroundColor).isLight()\n        : true;\n  }\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if (isV3 || Platform.OS === 'ios') {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n\n    shouldCenterContent =\n      hasAppbarContent &&\n      leftItemsCount < 2 &&\n      rightItemsCount < (isV3 ? 3 : 2);\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n\n  const isMode = (modeToCompare: AppbarModes) => {\n    return isV3 && mode === modeToCompare;\n  };\n\n  const filterAppbarActions = React.useCallback(\n    (isLeading = false) =>\n      React.Children.toArray(children).filter((child) =>\n        // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n        isLeading ? child.props.isLeading : !child.props.isLeading\n      ),\n    [children]\n  );\n\n  const spacingStyle = isV3 ? styles.v3Spacing : styles.spacing;\n\n  return (\n    <Surface\n      style={[\n        { backgroundColor },\n        styles.appbar,\n        {\n          height: isV3 ? modeAppbarHeight[mode] : DEFAULT_APPBAR_HEIGHT,\n        },\n        restStyle,\n        !theme.isV3 && { elevation },\n      ]}\n      elevation={elevation as MD3Elevation}\n      {...rest}\n    >\n      {shouldAddLeftSpacing ? <View style={spacingStyle} /> : null}\n      {(!isV3 || isMode('small') || isMode('center-aligned')) &&\n        renderAppbarContent({\n          children,\n          isDark,\n          isV3,\n          shouldCenterContent:\n            (isV3 && !isMode('small')) ?? shouldCenterContent,\n        })}\n      {(isMode('medium') || isMode('large')) && (\n        <View\n          style={[\n            styles.columnContainer,\n            isMode('center-aligned') && styles.centerAlignedContainer,\n          ]}\n        >\n          {/* Appbar top row with controls */}\n          <View style={styles.controlsRow}>\n            {/* Left side of row container, can contain AppbarBackAction or AppbarAction if it's leading icon  */}\n            {renderAppbarContent({\n              children,\n              isDark,\n              isV3,\n              renderOnly: [AppbarBackAction],\n              mode,\n            })}\n            {renderAppbarContent({\n              children: filterAppbarActions(true),\n              isDark,\n              isV3,\n              renderOnly: [AppbarAction],\n              mode,\n            })}\n            {/* Right side of row container, can contain other AppbarAction if they are not leading icons */}\n            <View style={styles.rightActionControls}>\n              {renderAppbarContent({\n                children: filterAppbarActions(false),\n                isDark,\n                isV3,\n                renderExcept: [\n                  Appbar,\n                  AppbarBackAction,\n                  AppbarContent,\n                  AppbarHeader,\n                ],\n                mode,\n              })}\n            </View>\n          </View>\n          {/* Middle of the row, can contain only AppbarContent */}\n          {renderAppbarContent({\n            children,\n            isDark,\n            isV3,\n            renderOnly: [AppbarContent],\n            mode,\n          })}\n        </View>\n      )}\n      {shouldAddRightSpacing ? <View style={spacingStyle} /> : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n  v3Spacing: {\n    width: 52,\n  },\n  controlsRow: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  rightActionControls: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  columnContainer: {\n    flexDirection: 'column',\n    flex: 1,\n    paddingTop: 8,\n  },\n  centerAlignedContainer: {\n    paddingTop: 0,\n  },\n});\n\nexport default withTheme(Appbar);\n\n// @component-docs ignore-next-line\nconst AppbarWithTheme = withTheme(Appbar);\n// @component-docs ignore-next-line\nexport { AppbarWithTheme as Appbar };\n"]}